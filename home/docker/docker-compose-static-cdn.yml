version: "3.8"

services:
  static-devarshi-dev-cdn:
    container_name: static-devarshi-dev-cdn
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./static-devarshi-dev-cdn:/app/static-devarshi-dev
    ports:
      - "8082:8082"
    command: >
      sh -c "npm install -g serve &&
             cd static-devarshi-dev &&
             serve -s . -l 8082"
    environment:
      - NODE_ENV=production
    restart: always
    networks:
      - internal

  static-devarshi-dev-cloudflared:
    container_name: static-devarshi-dev-cloudflared
    image: cloudflare/cloudflared:latest
    environment:
      - CLOUDFLARE_STATIC_DEVARSHI_DEV_TUNNEL_TOKEN=${CLOUDFLARE_STATIC_DEVARSHI_DEV_TUNNEL_TOKEN}
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_STATIC_DEVARSHI_DEV_TUNNEL_TOKEN}
    restart: always
    networks:
      - internal
    depends_on:
      - static-devarshi-dev-cdn

  static-devarshi-dev-minio-sync:
    container_name: static-devarshi-dev-minio-sync
    image: minio/mc
    volumes:
      - ./static-devarshi-dev-cdn:/sync/static-devarshi-dev
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    restart: always
    entrypoint: |
      /bin/sh -c '
      mc alias set minio http://minio-s3:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} || exit 1;
      while true; do
        echo "Checking MinIO and syncing at $$(date)";
        if mc ls minio/static-devarshi-dev; then
          mc mirror --overwrite minio/static-devarshi-dev /sync/static-devarshi-dev \
            && echo "Sync succeeded at $$(date)" \
            || echo "Sync failed at $$(date)";
        else
          echo "MinIO not reachable; retrying in 10s";
          sleep 10;
        fi
        sleep 60;
      done
      '
    networks:
      - internal

  static-devarshi-dev-r2-backup:
    container_name: static-devarshi-dev-r2-backup
    image: amazon/aws-cli
    environment:
      - AWS_ACCESS_KEY_ID=${R2_STATIC_DEVARSHI_DEV_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${R2_STATIC_DEVARSHI_DEV_SECRET_KEY_ID}
      - AWS_DEFAULT_REGION=auto
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
    volumes:
      - ./static-devarshi-dev-cdn:/sync/static-devarshi-dev
      - ./static-devarshi-dev-r2-backup.sh:/usr/local/bin/static-devarshi-dev-r2-backup.sh:ro
    restart: always
    entrypoint:
      - "/usr/bin/env"
      - "bash"
      - "/usr/local/bin/static-devarshi-dev-r2-backup.sh"
    networks:
      - internal

networks:
  internal:
    driver: bridge
